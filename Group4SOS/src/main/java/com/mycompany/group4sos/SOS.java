/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.group4sos;

import java.awt.GridLayout;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Component;
import java.awt.Color;
import java.awt.Font;
import java.util.*;
import java.awt.*;
import javax.swing.border.*;
import java.util.Timer;
import javax.swing.JFrame;          //DINAGDAG KO KIEL

/**
 *
 * @author Ulric
 */
public class SOS extends javax.swing.JFrame {

    String sel;
    String clr;
    private boolean isBluePlayer = true;
    private int playerRedScore = 0;
    private int playerBlueScore = 0;
    int gridSize;

    Player p1;
    Player p2;

    public SOS() {
        initComponents();

        
        p1 = new Player("Blue");
        p2 = new Player("Red");
        
        //p1 = new Rick("Red");
       // p2 = new Dexter("Blue");
        //JOptionPane.showMessageDialog(null, rick.picture + rick.PlayerColor, "Message Box", JOptionPane.INFORMATION_MESSAGE);

        clr = "blue";
        ButtonGroup blueButtonGroup = new ButtonGroup();
        blueButtonGroup.add(jRadioButton1);
        blueButtonGroup.add(jRadioButton2);
        ButtonGroup redButtonGroup = new ButtonGroup();
        redButtonGroup.add(jRadioButton3);
        redButtonGroup.add(jRadioButton4);

        jRadioButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                handleRadioButtonSelection(jRadioButton1);
            }
        });

        jRadioButton2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                handleRadioButtonSelection(jRadioButton2);
            }
        });

        jRadioButton3.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                handleRadioButtonSelection(jRadioButton3);
            }
        });
        jRadioButton4.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                handleRadioButtonSelection(jRadioButton4);
            }
        });

        setTitle("SOS Game");                                                       // DINAGDAG KO KIEL
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);        // DINAGDAG KO KIEL
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        blueSelectionSOS = new javax.swing.ButtonGroup();
        redSelectionSOS = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        titleLbl = new javax.swing.JLabel();
        titleLbl2 = new javax.swing.JLabel();
        titleLbl1 = new javax.swing.JLabel();
        titleLbl3 = new javax.swing.JLabel();
        newGameBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnMechanics = new javax.swing.JButton();
        bodyPanel = new javax.swing.JPanel();
        gridPanel = new javax.swing.JPanel();
        turnLbl = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bluePlayer = new javax.swing.JLabel();
        blueScore = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        blueAvatar = new javax.swing.JLabel();
        blueName = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        redPlayer = new javax.swing.JLabel();
        redScore = new javax.swing.JLabel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        redName = new javax.swing.JLabel();
        redAvatar = new javax.swing.JLabel();
        catchPhraseRed = new javax.swing.JLabel();
        catchPhraseBlue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(1470, 1000));

        jPanel3.setBackground(new java.awt.Color(204, 126, 63));

        titlePanel.setBackground(new java.awt.Color(204, 126, 63));

        titleLbl.setBackground(new java.awt.Color(0, 0, 0));
        titleLbl.setFont(new java.awt.Font("Will", 1, 80)); // NOI18N
        titleLbl.setText("maryosep!");

        titleLbl2.setFont(new java.awt.Font("Will", 1, 80)); // NOI18N
        titleLbl2.setForeground(new java.awt.Color(0, 102, 204));
        titleLbl2.setText("S");

        titleLbl1.setFont(new java.awt.Font("Will", 1, 80)); // NOI18N
        titleLbl1.setForeground(new java.awt.Color(102, 0, 0));
        titleLbl1.setText("O");

        titleLbl3.setFont(new java.awt.Font("Will", 1, 80)); // NOI18N
        titleLbl3.setForeground(new java.awt.Color(0, 102, 204));
        titleLbl3.setText("S");

        newGameBtn.setBackground(new java.awt.Color(184, 126, 63));
        newGameBtn.setFont(new java.awt.Font("Will", 1, 18)); // NOI18N
        newGameBtn.setText("<html><font color='#660000'>New</font>\n<font color='#0066ff'>Game</font></html>");
        newGameBtn.setActionCommand("<html><font color='#660000'>New</font>\n<font color='#0066CC'>Game</font></html>");
        newGameBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        newGameBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        newGameBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("<html><font color='#660000'>Game</font><font color='#0066CC'> by</font><font color='#000000'><b>: CinnaBon-Chon</b></font></html>");

        btnMechanics.setBackground(new java.awt.Color(184, 126, 63));
        btnMechanics.setFont(new java.awt.Font("Will", 1, 18)); // NOI18N
        btnMechanics.setText("<html><font color='#660000'>How</font> to \n<font color='#0066ff'>Play</font></html>");
        btnMechanics.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMechanics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMechanicsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addGroup(titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(titlePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(titlePanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(btnMechanics, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleLbl2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleLbl1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleLbl3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleLbl)
                .addGap(175, 175, 175)
                .addComponent(newGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLbl2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(titleLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlePanelLayout.createSequentialGroup()
                        .addGroup(titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(titleLbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(titleLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(1, 1, 1))
                    .addGroup(titlePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnMechanics, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlePanelLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(newGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        bodyPanel.setBackground(new java.awt.Color(102, 0, 0));
        bodyPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        gridPanel.setBackground(new java.awt.Color(204, 126, 63));
        gridPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        gridPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gridPanel.setMaximumSize(new java.awt.Dimension(959, 687));
        gridPanel.setMinimumSize(new java.awt.Dimension(959, 687));
        gridPanel.setName(""); // NOI18N

        javax.swing.GroupLayout gridPanelLayout = new javax.swing.GroupLayout(gridPanel);
        gridPanel.setLayout(gridPanelLayout);
        gridPanelLayout.setHorizontalGroup(
            gridPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 949, Short.MAX_VALUE)
        );
        gridPanelLayout.setVerticalGroup(
            gridPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 677, Short.MAX_VALUE)
        );

        turnLbl.setFont(new java.awt.Font("Will", 0, 18)); // NOI18N
        turnLbl.setForeground(new java.awt.Color(255, 255, 255));
        turnLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        turnLbl.setText("Red's always first");

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        bluePlayer.setBackground(new java.awt.Color(255, 255, 255));
        bluePlayer.setFont(new java.awt.Font("Will", 1, 24)); // NOI18N
        bluePlayer.setForeground(new java.awt.Color(153, 153, 153));
        bluePlayer.setText("Blue:");

        blueScore.setFont(new java.awt.Font("Will", 1, 24)); // NOI18N
        blueScore.setForeground(new java.awt.Color(153, 153, 153));
        blueScore.setText("0");

        jRadioButton1.setBackground(new java.awt.Color(0, 51, 102));
        blueSelectionSOS.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Will", 1, 24)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(153, 153, 153));
        jRadioButton1.setText("S");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(0, 51, 102));
        blueSelectionSOS.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Will", 1, 24)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(153, 153, 153));
        jRadioButton2.setText("O");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        blueAvatar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/select.png"))); // NOI18N
        blueAvatar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        blueName.setFont(new java.awt.Font("Will", 1, 24)); // NOI18N
        blueName.setForeground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bluePlayer)
                                .addGap(18, 18, 18)
                                .addComponent(blueScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(blueName, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(blueAvatar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bluePlayer)
                    .addComponent(blueScore))
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(blueName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(blueAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(102, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setPreferredSize(new java.awt.Dimension(224, 437));

        redPlayer.setFont(new java.awt.Font("Will", 1, 24)); // NOI18N
        redPlayer.setForeground(new java.awt.Color(255, 255, 255));
        redPlayer.setText("Red:");

        redScore.setFont(new java.awt.Font("Will", 1, 24)); // NOI18N
        redScore.setForeground(new java.awt.Color(255, 255, 255));
        redScore.setText("0");

        jRadioButton3.setBackground(new java.awt.Color(102, 0, 0));
        redSelectionSOS.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Will", 1, 24)); // NOI18N
        jRadioButton3.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton3.setText("S");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setBackground(new java.awt.Color(102, 0, 0));
        redSelectionSOS.add(jRadioButton4);
        jRadioButton4.setFont(new java.awt.Font("Will", 1, 24)); // NOI18N
        jRadioButton4.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton4.setText("O");

        redName.setFont(new java.awt.Font("Will", 1, 24)); // NOI18N
        redName.setForeground(new java.awt.Color(255, 255, 255));

        redAvatar.setBackground(new java.awt.Color(51, 0, 0));
        redAvatar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/select.png"))); // NOI18N
        redAvatar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton4)
                            .addComponent(jRadioButton3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(redPlayer)
                                .addGap(18, 18, 18)
                                .addComponent(redScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(redName, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(redAvatar)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redPlayer)
                    .addComponent(redScore))
                .addGap(18, 18, 18)
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton4)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(redName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(redAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        catchPhraseRed.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        catchPhraseRed.setForeground(new java.awt.Color(255, 255, 255));

        catchPhraseBlue.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        catchPhraseBlue.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(catchPhraseBlue, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(gridPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(catchPhraseRed, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(turnLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(catchPhraseRed, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(catchPhraseBlue, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(gridPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(turnLbl)))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void handleRadioButtonSelection(JRadioButton selectedRadioButton) {
        if (selectedRadioButton.isSelected()) {
            if (selectedRadioButton == jRadioButton1) {
                System.out.println("Option 1 is selected.");
                sel = "S";
                clr = "blue";

            } else if (selectedRadioButton == jRadioButton2) {
                System.out.println("Option 2 is selected.");
                sel = "O";
                clr = "blue";

            } else if (selectedRadioButton == jRadioButton3) {
                System.out.println("Option 3 is selected.");
                sel = "S";
                clr = "red";

            } else if (selectedRadioButton == jRadioButton4) {
                System.out.println("Option 4 is selected.");
                sel = "O";
                clr = "red";

            }
        }
        System.out.println("selection: " + sel + "\n" + "color: " + clr);
    }

    private void switchPlayer() {
        
        if (isBluePlayer) {
            turnLbl.setText("BLUE Player's Turn");
            bodyPanel.setBackground(new Color(0, 102, 204));
            jPanel1.setBackground(new Color(0, 102, 204));
            jPanel1.setBorder(new BevelBorder(BevelBorder.RAISED));
            jRadioButton1.setBackground(new Color(0, 102, 204));
            jRadioButton2.setBackground(new Color(0, 102, 204));
            jRadioButton1.setForeground(new Color(255, 255, 255));
            jRadioButton2.setForeground(new Color(255, 255, 255));
            blueName.setForeground(new Color(255, 255, 255));
            bluePlayer.setForeground(new Color(255, 255, 255));
            blueScore.setForeground(new Color(255, 255, 255));
            jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            blueAvatar.setIcon(new ImageIcon(getClass().getResource("/" + p1.picture + ".png")));
            redAvatar.setIcon(new ImageIcon(getClass().getResource("/" + p2.picture + "Dark.png")));

            jPanel2.setBackground(new Color(51, 0, 0));
            jPanel2.setBorder(new BevelBorder(BevelBorder.LOWERED));
            jRadioButton3.setBackground(new Color(51, 0, 0));
            jRadioButton4.setBackground(new Color(51, 0, 0));
            jRadioButton3.setForeground(new Color(153, 153, 153));
            jRadioButton4.setForeground(new Color(153, 153, 153));
            redName.setForeground(new Color(153, 153, 153));
            redPlayer.setForeground(new Color(153, 153, 153));
            redScore.setForeground(new Color(153, 153, 153));
            jRadioButton3.setEnabled(false);
            jRadioButton4.setEnabled(false);
            handleRadioButtonSelection(jRadioButton1);
            handleRadioButtonSelection(jRadioButton2);

            isBluePlayer = false;
        } else {
            turnLbl.setText("RED Player's Turn");
            bodyPanel.setBackground(new Color(102, 0, 0));
            jPanel1.setBackground(new Color(0, 51, 102));
            jPanel1.setBorder(new BevelBorder(BevelBorder.LOWERED));
            jRadioButton1.setBackground(new Color(0, 51, 102));
            jRadioButton2.setBackground(new Color(0, 51, 102));
            jRadioButton3.setForeground(new Color(255, 255, 255));
            jRadioButton4.setForeground(new Color(255, 255, 255));
            redName.setForeground(new Color(255, 255, 255));
            redPlayer.setForeground(new Color(255, 255, 255));
            redScore.setForeground(new Color(255, 255, 255));
            jRadioButton1.setEnabled(false);
            jRadioButton2.setEnabled(false);
            redAvatar.setIcon(new ImageIcon(getClass().getResource("/" + p2.picture + ".png")));
            blueAvatar.setIcon(new ImageIcon(getClass().getResource("/" + p1.picture + "Dark.png")));

            jPanel2.setBackground(new Color(102, 0, 0));
            jPanel2.setBorder(new BevelBorder(BevelBorder.RAISED));
            jRadioButton3.setBackground(new Color(102, 0, 0));
            jRadioButton4.setBackground(new Color(102, 0, 0));
            jRadioButton1.setForeground(new Color(153, 153, 153));
            jRadioButton2.setForeground(new Color(153, 153, 153));
            blueName.setForeground(new Color(153, 153, 153));
            bluePlayer.setForeground(new Color(153, 153, 153));
            blueScore.setForeground(new Color(153, 153, 153));
            jRadioButton3.setEnabled(true);
            jRadioButton4.setEnabled(true);
            handleRadioButtonSelection(jRadioButton3);
            handleRadioButtonSelection(jRadioButton4);

            isBluePlayer = true;
        }
    }

    //basta add lng sa mga method
    private void updateScoreLabels() {
        blueScore.setText(Integer.toString(playerBlueScore));
        redScore.setText(Integer.toString(playerRedScore));
    }

    private boolean checkDirectionS(int index1, int index2, int numRows, int numCols, int mainIndex) {
        index1 -= 1;
        index2 -= 1;
        mainIndex -= 1;
        if (index1 >= 0 && index1 < numRows * numCols && index2 >= 0 && index2 < numRows * numCols) {
            JButton button1 = (JButton) gridPanel.getComponent(index1);
            JButton button2 = (JButton) gridPanel.getComponent(index2);

            JButton mainButton = (JButton) gridPanel.getComponent(mainIndex);
            if (mainButton.getText().equals("S")) {

                if (button1.getText().equals("O") && button2.getText().equals("S")) {
                    System.out.println("SOS found in direction S");

                    if (bodyPanel.getBackground().equals(new Color(0, 102, 204))) {
                        p1.PlayCatchphrase(catchPhraseBlue, p1);
                        //catchPhraseBlue(p1.catchphrases);

                        highlightCellBlue(mainButton);
                        highlightCellBlue(button1);
                        highlightCellBlue(button2);
                        playerBlueScore++;
                        updateScoreLabels();
                    } else if (bodyPanel.getBackground().equals(new Color(102, 0, 0))) {

                        //catchPhraseRed(p2.catchphrases);
                        p2.PlayCatchphrase(catchPhraseRed, p2);

                        highlightCellRed(mainButton);
                        highlightCellRed(button1);
                        highlightCellRed(button2);
                        playerRedScore++;
                        updateScoreLabels();
                    }
                    return true;
                }

            }

        }

        return false;
    }

    private boolean checkDirectionO(int index1, int index2, int numRows, int numCols, int mainIndex) {
        index1 -= 1;
        index2 -= 1;
        mainIndex -= 1;
        if (index1 >= 0 && index1 < numRows * numCols && index2 >= 0 && index2 < numRows * numCols) {
            JButton button1 = (JButton) gridPanel.getComponent(index1);
            JButton button2 = (JButton) gridPanel.getComponent(index2);

            JButton mainButton = (JButton) gridPanel.getComponent(mainIndex);
            boolean swt = false;
            if (mainButton.getText().equals("O")) {
                if (button1.getText().equals("S") && button2.getText().equals("S")) {
                    System.out.println("S O S ");
                    if (bodyPanel.getBackground().equals(new Color(0, 102, 204))) {
                        p1.PlayCatchphrase(catchPhraseBlue, p1);
                        //catchPhraseBlue(p1.catchphrases);
                        highlightCellBlue(mainButton);
                        highlightCellBlue(button1);
                        highlightCellBlue(button2);
                        playerBlueScore++;
                        updateScoreLabels();
                    } else if (bodyPanel.getBackground().equals(new Color(102, 0, 0))) {
                        p2.PlayCatchphrase(catchPhraseRed, p2);
                        //catchPhraseRed(p1.catchphrases);
                        highlightCellRed(mainButton);
                        highlightCellRed(button1);
                        highlightCellRed(button2);
                        playerRedScore++;
                        updateScoreLabels();
                    }
                    return true;
                }

            }

        }

        return false;
    }

    private void highlightCellBlue(JButton button) {
        if (button.getBackground().equals(new Color(102, 0, 0))) {
            button.setIcon(new ImageIcon(getClass().getResource("/bluered.png")));
        } else {
            button.setIcon(new ImageIcon(getClass().getResource("/blue.png")));
            button.setBackground(new Color(0, 102, 204));
        }
    }

    private void highlightCellRed(JButton button) {
        if (button.getBackground().equals(new Color(0, 102, 204))) {
            button.setIcon(new ImageIcon(getClass().getResource("/bluered.png")));
        } else {
            button.setIcon(new ImageIcon(getClass().getResource("/red.png")));
            button.setBackground(new Color(102, 0, 0));
        }
    }

    private void CheckCells(int index, int num) {
        int numRows = num; // Assuming a 5x5 grid, you can adjust this according to your grid size
        int numCols = num;
        int row = index / numCols;
        int col = index % numCols;

        int leftIndex = -1;
        int leftIndex2 = -1;
        int topLeftIndex = -1;
        int topLeftIndex2 = -1;
        int bottomLeftIndex = -1;
        int bottomLeftIndex2 = -1;

        int rightIndex = -1;
        int rightIndex2 = -1;
        int topRightIndex = -1;
        int topRightIndex2 = -1;
        int bottomRightIndex = -1;
        int bottomRightIndex2 = -1;

        // Calculate indices of adjacent cells
        if (index % num != 1) {
            //JOptionPane.showMessageDialog(this, "ind"+index+"num"+num+"res"+index%num);
            leftIndex = index - 1;

            topLeftIndex = index - numCols - 1;

            bottomLeftIndex = index + numCols - 1;

            if (index % num != 2) {
                leftIndex2 = leftIndex - 1;
                topLeftIndex2 = topLeftIndex - numCols - 1;
                bottomLeftIndex2 = bottomLeftIndex + numCols - 1;
            }

        }
        int topIndex = index - numCols;
        int topIndex2 = topIndex - numCols;

        if (index % num != 0) {
            rightIndex = index + 1;
            topRightIndex = index - numCols + 1;
            bottomRightIndex = index + numCols + 1;

            if (index % num != num - 1) {
                //JOptionPane.showMessageDialog(this, "ind"+index+"num"+num+"res"+index%num);
                rightIndex2 = rightIndex + 1;
                topRightIndex2 = topRightIndex - numCols + 1;
                bottomRightIndex2 = bottomRightIndex + numCols + 1;
            }

        }
        int bottomIndex = index + numCols;
        int bottomIndex2 = bottomIndex + numCols;

        boolean a = checkDirectionS(leftIndex, leftIndex2, numRows, numCols, index);
        boolean b = checkDirectionS(topIndex, topIndex2, numRows, numCols, index);
        boolean c = checkDirectionS(rightIndex, rightIndex2, numRows, numCols, index);
        //JOptionPane.showMessageDialog(this, "r1:"+rightIndex+"r2:"+rightIndex2);
        boolean d = checkDirectionS(bottomIndex, bottomIndex2, numRows, numCols, index);
        boolean e = checkDirectionS(topLeftIndex, topLeftIndex2, numRows, numCols, index);
        boolean f = checkDirectionS(topRightIndex, topRightIndex2, numRows, numCols, index);
        boolean g = checkDirectionS(bottomLeftIndex, bottomLeftIndex2, numRows, numCols, index);
        boolean h = checkDirectionS(bottomRightIndex, bottomRightIndex2, numRows, numCols, index);

        boolean i = checkDirectionO(leftIndex, rightIndex, numRows, numCols, index);
        boolean j = checkDirectionO(topIndex, bottomIndex, numRows, numCols, index);
        boolean k = checkDirectionO(topLeftIndex, bottomRightIndex, numRows, numCols, index);
        boolean l = checkDirectionO(bottomLeftIndex, topRightIndex, numRows, numCols, index);
        boolean[] bools = {a, b, c, d, e, f, g, h, i, j, k, l};
        boolean palit = true;
        for (int z = 0; z < bools.length; z++) {
            if (bools[z] == true) {
                palit = false;
                break;
            } else {

            }
        }
        if (palit) {
            switchPlayer();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed
    private void initializeGame() {
        gridPanel.removeAll();
        blueScore.setText("0");
        playerBlueScore = 0;
        blueName.setText("");
        blueAvatar.setIcon(new ImageIcon(getClass().getResource("/select.png")));
        redScore.setText("0");
        playerRedScore = 0;
        redName.setText("");
        redAvatar.setIcon(new ImageIcon(getClass().getResource("/select.png")));
        jPanel3.revalidate();
        jPanel3.repaint();
    }

    private void newGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameBtnActionPerformed

        initializeGame();
        String[] gridType = {"5x5", "10x10", "15x15"};
        JComboBox gType = new JComboBox(gridType);

        int gridOption = JOptionPane.showConfirmDialog(null, gType, "Select Grid Type", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (gridOption == JOptionPane.OK_OPTION) {
            switch (gType.getSelectedIndex()) {
                case 0:
                    gridSize = 5;
                    break;
                case 1:
                    gridSize = 10;
                    break;
                case 2:
                    gridSize = 15;
                    break;
            }
            gridPanel.removeAll();
            gridPanel.setLayout(new GridLayout(gridSize, gridSize));
            for (int i = 1; i <= (gridSize * gridSize); i++) {
                JButton button = new JButton("");
                button.setFont(new Font("Will", Font.PLAIN, 45));
                button.setBackground(new Color(224, 126, 63, 255));
                button.setIcon(new ImageIcon(getClass().getResource("/gridButton5x5.png")));
                button.setHorizontalTextPosition(JLabel.CENTER);
                final int index = i; // Store the index of the button
                button.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        int index = gridPanel.getComponentZOrder((Component) e.getSource()); // Get index of the button clicked
                        System.out.println("Button index: " + index);
                        if (button.getText().equals("")) {

                            button.setText(sel);
                            if (clr.equals("red")) {
                                button.setForeground(Color.RED); // Set background color to red
                            } else if (clr.equals("blue")) {
                                button.setForeground(Color.BLUE); // Set background color to blue
                            }
                            CheckCells(index + 1, gridSize);
                            if (allButtonsFilled()) {
                                determineWinner();
                            }
                        }
                    }
                });
                gridPanel.add(button);
            }
            gridPanel.revalidate();
            gridPanel.repaint();
            //////////////////

            if (isBluePlayer) {
                jRadioButton3.setSelected(true);
                jRadioButton1.setSelected(true);
                handleRadioButtonSelection(jRadioButton1);
                handleRadioButtonSelection(jRadioButton3);
            } else {
                jRadioButton1.setSelected(true);
                jRadioButton3.setSelected(true);
                handleRadioButtonSelection(jRadioButton3);
                handleRadioButtonSelection(jRadioButton1);
            }

            ////////////////

            //p1.avatar.setIcon(new ImageIcon(getClass().getResource("/" + p1.picture + ".png")));

            p1 = setCharacter(p1, "Blue", blueAvatar, blueName);
            p2 = setCharacter(p2, "Red", redAvatar, redName);
            playerBlueScore = p1.score;
            playerRedScore= p2.score;
            //JOptionPane.showMessageDialog(null, p1.avatar);

        }
    }//GEN-LAST:event_newGameBtnActionPerformed
    private boolean allButtonsFilled() {
        Component[] components = gridPanel.getComponents();
        for (Component component : components) {
            if (component instanceof JButton) {
                JButton button = (JButton) component;
                if (button.getText().isEmpty()) {
                    return false; // At least one button is not filled
                }
            }
        }
        return true; // All buttons are filled
    }

    public Player setCharacter(Player player, String col, JLabel avat, JLabel lblName) {
    String[] charSelect = {"Dexter's Laboratory", "Jimmy Neutron", "Megamind", "Heinz Doofenshmirtz", "Rick Sanchez", "Stewie Griffin", "Velma Dinkley"};
     JComboBox cSelect = new JComboBox(charSelect);
    int characOption = JOptionPane.showConfirmDialog(null, cSelect, "Select Character for " + col, JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
    if (characOption == JOptionPane.OK_OPTION) {
        switch (cSelect.getSelectedIndex()) {
            case 0:
                player = new Dexter(col);
                break;
            case 1:
                player = new Jimmy(col);
                break;
            case 2:
                player = new Megamind(col);
                break;
            case 3:
                player = new Doofenshmirtz(col);
                break;
            case 4:
                player = new Rick(col);
                break;
            case 5:
                player = new Stewie(col);
                break;
            case 6:
                player = new Velma(col);
                break;
        }
        player.avatar = avat;
        player.nameLabel = lblName;
        player.avatar.setIcon(new ImageIcon(getClass().getResource("/" + player.picture + ".png")));
        player.nameLabel.setText(player.name);
        return player;
    } else {

        initializeGame();
        return player;
    }
}


// Method to determine the winner
    private void determineWinner() {
        if (playerRedScore > playerBlueScore) {
            JOptionPane.showMessageDialog(null, "Red Player Wins!");
            //catchPhraseBlue(p1.winCatchphrase);
            p1.WinCatchphrase(catchPhraseRed, p2);
        } else if (playerRedScore < playerBlueScore) {
            JOptionPane.showMessageDialog(null, "Blue Player Wins!");
            //catchPhraseRed(p2.winCatchphrase);
            p2.WinCatchphrase(catchPhraseBlue, p1);
        } else {
            JOptionPane.showMessageDialog(null, "Draw!");
        }
    }
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void btnMechanicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMechanicsActionPerformed
        StringBuilder message = new StringBuilder();
            message.append("<html><ul>");
            message.append("<li>The game is played by two players taking turns in <br> placing \"S\" or \"O\" on the cells of the game grid.</li>");
            message.append("<li>The player that successfully creates an \"SOS\" pattern <br> either horizontally, vertically, or diagonally earns a point and <br> the next turn.</li>");
            message.append("<li>The game ends when all cells of the game grid as filled by <br> either \"S\" or \"O\" by the players.</li>");
            message.append("<li>The player with the most points collected wins the game.</li>");
            message.append("</ul></html>");

            JOptionPane.showMessageDialog(SOS.this, message.toString(), "Game Mechanics", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnMechanicsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SOS().setVisible(true);

                //Player p1 = new Rick("Red");
            }
        });
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SOS().setVisible(true);
            }
        });

        java.awt.EventQueue.invokeLater(() -> { // KIEL NAGLAGAY NETO
            new SOS().setVisible(true);         // KIEL NAGLAGAY NETO
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel blueAvatar;
    private javax.swing.JLabel blueName;
    private javax.swing.JLabel bluePlayer;
    private javax.swing.JLabel blueScore;
    private javax.swing.ButtonGroup blueSelectionSOS;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JButton btnMechanics;
    private javax.swing.JLabel catchPhraseBlue;
    private javax.swing.JLabel catchPhraseRed;
    public javax.swing.JPanel gridPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    public javax.swing.JButton newGameBtn;
    private javax.swing.JLabel redAvatar;
    private javax.swing.JLabel redName;
    private javax.swing.JLabel redPlayer;
    private javax.swing.JLabel redScore;
    private javax.swing.ButtonGroup redSelectionSOS;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JLabel titleLbl1;
    private javax.swing.JLabel titleLbl2;
    private javax.swing.JLabel titleLbl3;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JLabel turnLbl;
    // End of variables declaration//GEN-END:variables
}
